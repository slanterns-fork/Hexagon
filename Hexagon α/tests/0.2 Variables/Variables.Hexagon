using Hexagon::Lang::BasicTypes::*;
using Hexagon::System::SpecialCharacters::*;
using Hexagon::System::Booleans::*;

void() Main = (){
	
	import Hexagon::System::Console;
	
	import Endline;
	
	import True,False;
	
	Integer a = 5;
	Double a1 = 0.037 , a2 = .5 ;
	Number b = ..3, c = 0.5.285714;    //这里的规则是【整数部分.非循环节.循环节】这样
	Complex d = 1i2;                    //实部+i+虚部
	Fraction z = 35/97;                 //分子/分母
	
	/*
	这里说明一下这个思路。
	Fraction的初始化接收一个Number类型的值（实数），
	而operator/的一个重载是Number(Integer,Integer)型的，
	也就是接受两个整数返回一个实数的做法。
	而Fraction有Fraction(Number)的构造，
	可以隐式转换为Fraction类型的。*/
	
	
	String f = "testing";
	
	Character k = 250, i = 'i';
	
	Boolean x = True;
	
	Boolean x1 = 0;
	
	Boolean x2 = False;
	
	{
		Object a;
		Console << a1 + b << Endline;
	};
	
	Console << a + a1 << Endline;
	Console << a - a1 << Endline;
	Console << a * a1 << Endline;
	Console << a / a1 << Endline;
	Console << a % a1 << Endline;
	
	f = f + " strings.";
	
	Console << f << Endline;
	
};